[{"C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\index.js":"1","C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\App.js":"2","C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\serviceWorker.js":"3","C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\app\\store.js":"4","C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\Search.js":"5","C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\WeatherInfo.js":"6","C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\ProgressBar.js":"7","C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\Hourly.js":"8","C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\features\\locationSlice.js":"9","C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\features\\citySlice.js":"10","C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\Row.js":"11"},{"size":644,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":5379,"mtime":1610198420792,"results":"14","hashOfConfig":"13"},{"size":5141,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":274,"mtime":1610193969102,"results":"16","hashOfConfig":"13"},{"size":2186,"mtime":1610196323384,"results":"17","hashOfConfig":"13"},{"size":1877,"mtime":1610194105694,"results":"18","hashOfConfig":"13"},{"size":824,"mtime":1610109456464,"results":"19","hashOfConfig":"13"},{"size":331,"mtime":1610194977373,"results":"20","hashOfConfig":"13"},{"size":474,"mtime":1610193144223,"results":"21","hashOfConfig":"13"},{"size":406,"mtime":1610193935960,"results":"22","hashOfConfig":"13"},{"size":473,"mtime":1610197626968,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"113hcb9",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\index.js",[],["50","51"],"C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\App.js",["52"],"import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Search from './Search';\r\nimport WeatherInfo from './WeatherInfo';\r\nimport ProgressBar from './ProgressBar';\r\nimport Hourly from './Hourly';\r\nimport moment from 'moment-timezone';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectLocation, setLocation } from './features/locationSlice';\r\nimport Geocode from 'react-geocode';\r\nimport { setCity } from './features/citySlice';\r\nimport Row from './Row';\r\nfunction App() {\r\n  const [weather, setWeather] = useState({});\r\n  const [rain, setRain] = useState('No Rain');\r\n  const location = useSelector(selectLocation);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition((pos) => {\r\n      Geocode.setApiKey(\"AIzaSyCHEWyrrh4llmggFo6x4jgV0joBPniEVKU\");\r\n      Geocode.setLanguage(\"en\");\r\n      Geocode.setRegion(\"es\");\r\n      Geocode.enableDebug();\r\n      Geocode.fromLatLng(pos.coords.latitude, pos.coords.longitude).then(\r\n        res => {\r\n          const address = res.results[0].formatted_address.split(',');\r\n          dispatch(setCity(address[4]));\r\n        },\r\n        error => {\r\n          console.error(error);\r\n        }\r\n      );\r\n      dispatch(setLocation({\r\n        lat: pos.coords.latitude,\r\n        lng: pos.coords.longitude\r\n      }));\r\n    });\r\n\r\n  }, []);\r\n  useEffect(() => {\r\n  let url = `https://api.openweathermap.org/data/2.5/onecall?lat=${location.lat}&lon=${location.lng}&units=metric&appid=55cd7066da977f58e69d3119e6c0e006`;  \r\n  fetch(url)\r\n    .then(res => res.json())\r\n    .then((result) => {\r\n      setWeather(result);\r\n    });\r\n  },[location]);\r\n\r\n  if (weather && weather.current && weather.current.rain) {\r\n    setRain(weather.current.rain);\r\n  }\r\n  return (\r\n      <div className=\"app\">\r\n      <div className=\"appBody\">\r\n      <Search />\r\n        <WeatherInfo\r\n        lat={weather.lat}\r\n        lon={weather.lon}\r\n        city=\"Vidyagiri\"\r\n        dt={moment(weather.current?.dt * 1000).tz(weather.timezone)?.format('MMMM Do YYYY, h:mm a')}\r\n        rise={moment(weather.current?.sunrise * 1000).tz(weather.timezone)?.format('LT')}\r\n        set={moment(weather.current?.sunset * 1000).tz(weather.timezone)?.format('LT')}\r\n        temp={weather.current?.temp}\r\n        feelsLike={weather.current?.feels_like}\r\n        climate={weather.current?.weather[0].description}\r\n        icon={weather.current?.weather[0].icon}\r\n        rain={rain}\r\n        />\r\n        <div className=\"app__progressBars\">\r\n          <ProgressBar title=\"Clouds\" per={weather.current?.clouds}/>\r\n          <ProgressBar title=\"Humdity\" per={weather.current?.humidity}/>\r\n          <ProgressBar title=\"UV Index\" per={weather.current?.uvi}/>\r\n        </div>\r\n        {weather.hourly && (\r\n          <div className=\"app__hourly\">\r\n          <Hourly time={moment(weather.hourly[weather.hourly?.length - 7]?.dt * 1000).tz(weather.timezone).format('LT')} image={weather.hourly[weather.hourly?.length - 7]?.weather[0].icon} desc={weather.hourly[weather.hourly?.length - 7]?.weather[0].description} />\r\n          <Hourly time={moment(weather.hourly[weather.hourly?.length - 6]?.dt * 1000).tz(weather.timezone).format('LT')} image={weather.hourly[weather.hourly?.length - 6]?.weather[0].icon} desc={weather.hourly[weather.hourly?.length - 6]?.weather[0].description}/>\r\n          <Hourly time={moment(weather.hourly[weather.hourly?.length - 5]?.dt * 1000).tz(weather.timezone).format('LT')} image={weather.hourly[weather.hourly?.length - 5]?.weather[0].icon} desc={weather.hourly[weather.hourly?.length - 5]?.weather[0].description}/>\r\n          <Hourly time={moment(weather.hourly[weather.hourly?.length - 4]?.dt * 1000).tz(weather.timezone).format('LT')} image={weather.hourly[weather.hourly?.length - 4]?.weather[0].icon} desc={weather.hourly[weather.hourly?.length - 4]?.weather[0].description}/>\r\n          <Hourly time={moment(weather.hourly[weather.hourly?.length - 3]?.dt * 1000).tz(weather.timezone).format('LT')} image={weather.hourly[weather.hourly?.length - 3]?.weather[0].icon} desc={weather.hourly[weather.hourly?.length - 3]?.weather[0].description}/>\r\n          <Hourly time={moment(weather.hourly[weather.hourly?.length - 2]?.dt * 1000).tz(weather.timezone).format('LT')} image={weather.hourly[weather.hourly?.length - 2]?.weather[0].icon} desc={weather.hourly[weather.hourly?.length - 2]?.weather[0].description}/>\r\n          <Hourly time={moment(weather.hourly[weather.hourly?.length - 1]?.dt * 1000).tz(weather.timezone).format('LT')} image={weather.hourly[weather.hourly?.length - 1]?.weather[0].icon} desc={weather.hourly[weather.hourly?.length - 1]?.weather[0].description}/>\r\n        </div>\r\n        )}\r\n        <Row \r\n          day='Day'\r\n          night='Night'\r\n          min='Min'\r\n          max='Max'\r\n          morn='Morn'\r\n          eve='Eve'\r\n          />\r\n        {weather.daily && (\r\n          \r\n          weather.daily.map(daily => (\r\n            <Row daily={moment(daily.dt * 1000).tz(weather.timezone).format('dddd')}\r\n              day={daily.temp.day}\r\n              night={daily.temp.night}\r\n              min={daily.temp.min}\r\n              max={daily.temp.max}\r\n              morn={daily.temp.morn}\r\n              eve={daily.temp.eve}\r\n            />\r\n          ))\r\n        )}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\serviceWorker.js",[],"C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\app\\store.js",[],"C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\Search.js",["53","54"],"import React, { Component, useState } from 'react'\r\nimport './Search.css'\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport PlacesAutocomplete, {\r\n    geocodeByAddress,\r\n    getLatLng,\r\n  } from 'react-places-autocomplete';\r\n  import SearchIcon from '@material-ui/icons/Search';\r\nimport { selectLocation, setLocation } from './features/locationSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCity } from './features/citySlice';\r\nfunction Search () {\r\n    \r\n    const [state, setState] = useState({address: ''});\r\n    const dispatch = useDispatch();\r\n     const handleChange = address => {\r\n        setState({ address });\r\n      };\r\n     \r\n     const handleSelect = address => {\r\n        setState({ address });\r\n        dispatch(setCity(address.split(',')[0]));\r\n        geocodeByAddress(address)\r\n          .then(results => getLatLng(results[0]))\r\n          .then(latLng => { dispatch(setLocation(latLng))\r\n        })\r\n          .catch(error => console.error('Error', error));\r\n      };\r\n        return (\r\n            <PlacesAutocomplete\r\n        value={state.address}\r\n        onChange={handleChange}\r\n        onSelect={handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps }) => (\r\n          <div className=\"search\">\r\n              <div className=\"search__container\">\r\n                  <SearchIcon />\r\n            <input\r\n            value={state.address}\r\n              {...getInputProps({\r\n                placeholder: 'Search Places ...',\r\n                className: 'location-search-input',\r\n              })}\r\n            />\r\n              </div>\r\n            <div className=\"autocomplete-dropdown-container\">\r\n              {suggestions.map(suggestion => {\r\n                return (\r\n                  <div className=\"search__suggestion\"\r\n                    {...getSuggestionItemProps(suggestion, {\r\n                    })}\r\n                  >\r\n                    <LocationOnIcon /> <span>{suggestion.description}</span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n        )\r\n}\r\n\r\nexport default Search\r\n","C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\WeatherInfo.js",["55"],"import React, { useEffect } from 'react'\r\nimport './WeatherInfo.css'\r\nimport sunset from './png/icons8-sunset-96.png'\r\nimport sunrise from './png/icons8-sunrise-96.png'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectCity } from './features/citySlice'\r\n\r\nfunction WeatherInfo({lat, lon, dt, climate, rain, rise, set, temp, feelsLike, icon}) {\r\n\r\n    const city = useSelector(selectCity);\r\n    return (\r\n        <div className=\"weatherInfo\">\r\n            <div className=\"weatherInfo__header\">\r\n            <h2 className=\"weatherInfo__title\"> Weather</h2>\r\n            <h2 className=\"weatherInfo__dt\">{dt}</h2>\r\n            </div>\r\n            <div className=\"weatherInfo__info\">\r\n                <div className=\"weatherInfo__left\">\r\n                    <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"icon\"/>\r\n                    <div className=\"weatherInfo__details\">\r\n                        <h3>{city}</h3>\r\n                        <p>{climate}</p>\r\n                        <span>Chance of rain: {rain}</span>\r\n                    </div>\r\n                    <div className=\"weatherInfo__sun\">\r\n                        <div className=\"weatherInfo__rise\">\r\n                            <img src={sunrise} alt=\"\"/>\r\n                            <p>{rise}</p>\r\n                        </div>\r\n                        <div className=\"weatherInfo__rise\">\r\n                            <img src={sunset} alt=\"\"/>\r\n                            <p>{set}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"weatherInfo__right\">\r\n                    <p className=\"weatherInfo__temperature\">{temp}°c</p>\r\n                    <p className=\"weatherInfo__minMax\">Feels like {feelsLike}°c</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherInfo\r\n","C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\ProgressBar.js",[],"C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\Hourly.js",[],"C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\features\\locationSlice.js",[],"C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\features\\citySlice.js",[],"C:\\Users\\pramod pams\\Desktop\\react-app\\linkedin\\weather\\src\\Row.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":39,"column":6,"nodeType":"62","endLine":39,"endColumn":8,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":26},{"ruleId":"64","severity":1,"message":"68","line":9,"column":10,"nodeType":"66","messageId":"67","endLine":9,"endColumn":24},{"ruleId":"64","severity":1,"message":"69","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":26},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'selectLocation' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [dispatch]",{"range":"75","text":"76"},[1365,1367],"[dispatch]"]